// Code generated by mockery v2.51.1. DO NOT EDIT.

package analysismanager

import (
	uuid "github.com/google/uuid"
	mock "github.com/stretchr/testify/mock"
)

// MockanalysisRequestStore is an autogenerated mock type for the analysisRequestStore type
type MockanalysisRequestStore struct {
	mock.Mock
}

type MockanalysisRequestStore_Expecter struct {
	mock *mock.Mock
}

func (_m *MockanalysisRequestStore) EXPECT() *MockanalysisRequestStore_Expecter {
	return &MockanalysisRequestStore_Expecter{mock: &_m.Mock}
}

// createAnalysisRequest provides a mock function with given fields: analysisRequest
func (_m *MockanalysisRequestStore) createAnalysisRequest(analysisRequest *AnalysisRequest) error {
	ret := _m.Called(analysisRequest)

	if len(ret) == 0 {
		panic("no return value specified for createAnalysisRequest")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*AnalysisRequest) error); ok {
		r0 = rf(analysisRequest)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockanalysisRequestStore_createAnalysisRequest_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'createAnalysisRequest'
type MockanalysisRequestStore_createAnalysisRequest_Call struct {
	*mock.Call
}

// createAnalysisRequest is a helper method to define mock.On call
//   - analysisRequest *AnalysisRequest
func (_e *MockanalysisRequestStore_Expecter) createAnalysisRequest(analysisRequest interface{}) *MockanalysisRequestStore_createAnalysisRequest_Call {
	return &MockanalysisRequestStore_createAnalysisRequest_Call{Call: _e.mock.On("createAnalysisRequest", analysisRequest)}
}

func (_c *MockanalysisRequestStore_createAnalysisRequest_Call) Run(run func(analysisRequest *AnalysisRequest)) *MockanalysisRequestStore_createAnalysisRequest_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*AnalysisRequest))
	})
	return _c
}

func (_c *MockanalysisRequestStore_createAnalysisRequest_Call) Return(_a0 error) *MockanalysisRequestStore_createAnalysisRequest_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockanalysisRequestStore_createAnalysisRequest_Call) RunAndReturn(run func(*AnalysisRequest) error) *MockanalysisRequestStore_createAnalysisRequest_Call {
	_c.Call.Return(run)
	return _c
}

// getAnalysisRequestIdByHash provides a mock function with given fields: hash
func (_m *MockanalysisRequestStore) getAnalysisRequestIdByHash(hash string) (uuid.UUID, error) {
	ret := _m.Called(hash)

	if len(ret) == 0 {
		panic("no return value specified for getAnalysisRequestIdByHash")
	}

	var r0 uuid.UUID
	var r1 error
	if rf, ok := ret.Get(0).(func(string) (uuid.UUID, error)); ok {
		return rf(hash)
	}
	if rf, ok := ret.Get(0).(func(string) uuid.UUID); ok {
		r0 = rf(hash)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(uuid.UUID)
		}
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(hash)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockanalysisRequestStore_getAnalysisRequestIdByHash_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'getAnalysisRequestIdByHash'
type MockanalysisRequestStore_getAnalysisRequestIdByHash_Call struct {
	*mock.Call
}

// getAnalysisRequestIdByHash is a helper method to define mock.On call
//   - hash string
func (_e *MockanalysisRequestStore_Expecter) getAnalysisRequestIdByHash(hash interface{}) *MockanalysisRequestStore_getAnalysisRequestIdByHash_Call {
	return &MockanalysisRequestStore_getAnalysisRequestIdByHash_Call{Call: _e.mock.On("getAnalysisRequestIdByHash", hash)}
}

func (_c *MockanalysisRequestStore_getAnalysisRequestIdByHash_Call) Run(run func(hash string)) *MockanalysisRequestStore_getAnalysisRequestIdByHash_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *MockanalysisRequestStore_getAnalysisRequestIdByHash_Call) Return(_a0 uuid.UUID, _a1 error) *MockanalysisRequestStore_getAnalysisRequestIdByHash_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockanalysisRequestStore_getAnalysisRequestIdByHash_Call) RunAndReturn(run func(string) (uuid.UUID, error)) *MockanalysisRequestStore_getAnalysisRequestIdByHash_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockanalysisRequestStore creates a new instance of MockanalysisRequestStore. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockanalysisRequestStore(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockanalysisRequestStore {
	mock := &MockanalysisRequestStore{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
